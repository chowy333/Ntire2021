Datetime : 2021-02-07 13:18:58.937104
==========       CONFIG      =============
train_path:/home/wooyeong/Burst/burstsr_dataset/Zurich_Public/
split_ratio:0.8
evaluate:False
denoise:False
max_noise:0.0748
min_noise:0.0
batch_size:16
num_workers:8
patch_size:256
num_seq:14
in_channels:4
gt_channels:3
start_epoch:1
end_epochs:10000
total_iters:10000000
start_iters:0
lr_adjust_freq:200000
lr:0.0001
resume:
valid_freq:5000
print_freq:100
postname:
save_path:./ckpts
save_freq:100000
logdir:./logs
pretrained_model:
model:demo5
norm_type:None
block_type:rrdb
act_type:relu
bias:True
filters:64
reduction:8
n_resblocks:6
num_rfab:8
sr_n_resblocks:6
dm_n_resblocks:6
scale:4
downsampler:avg
vgg_path:/mnt/lustre/qianguocheng/codefiles/vgg19.pth
vgg_loss:l1
vgg_layer:5
dm_lambda:0.5
sr_lambda:1
ssim_lambda:0
vgg_lambda:0
remove:False
flag:None
bayer_mode:rggb
seed:0
gpu_id:3
cl_weights:1,1,1,1
num_steps:4
custom_lr_path:None
custom_lr_train_dir:PixelShift200_train_crop_lr
custom_lr_valid_dir:PixelShift200_valid_crop_lr
post:demo5-8-64-x4


==========     CONFIG END    =============
===> Loading the network ...
NET(
  (head): Sequential(
    (0): ConvBlock_3D(
      (0): Zero_pad(
        (pad): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
      )
      (1): Conv3d(4, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
    )
  )
  (trunk_rfab): Sequential(
    (0): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (1): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (2): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (3): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (4): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (5): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (6): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (7): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (8): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
    )
  )
  (trunk_trb): Sequential(
    (0): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (1): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (2): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (3): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (4): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (5): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (6): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (7): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (8): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (9): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (10): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (11): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (12): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (13): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (14): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (15): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (16): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (17): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
  )
  (tail): Sequential(
    (0): ConvBlock_2D(
      (0): Conv2d(128, 1024, kernel_size=(3, 3), stride=(1, 1))
    )
  )
  (tail_conv): ConvBlock_2D(
    (0): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (recon): Sequential(
    (0): PixelShuffle(upscale_factor=8)
    (1): ConvBlock_2D(
      (0): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (global_res): Sequential(
    (0): ConvBlock_2D(
      (0): Conv2d(896, 1024, kernel_size=(3, 3), stride=(1, 1))
      (1): ReLU(inplace=True)
    )
  )
)
  + Number of params: 13.34M
---------- Start training -------------
