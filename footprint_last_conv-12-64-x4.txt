Datetime : 2021-02-04 12:56:58.895851
==========       CONFIG      =============
train_path:/home/wooyeong/Burst/burstsr_dataset/Zurich_Public/
split_ratio:0.8
evaluate:False
denoise:False
max_noise:0.078
min_noise:0.0
batch_size:16
num_workers:8
patch_size:256
num_seq:14
in_channels:4
gt_channels:3
start_epoch:1
end_epochs:10000
total_iters:10000000
start_iters:0
lr_adjust_freq:200000
lr:0.0001
resume:
valid_freq:5000
print_freq:100
postname:
save_path:./ckpts
save_freq:100000
logdir:./logs
pretrained_model:
model:last_conv
norm_type:None
block_type:rrdb
act_type:relu
bias:True
filters:64
reduction:8
n_resblocks:6
num_rfab:12
sr_n_resblocks:6
dm_n_resblocks:6
scale:4
downsampler:avg
vgg_path:/mnt/lustre/qianguocheng/codefiles/vgg19.pth
vgg_loss:l1
vgg_layer:5
dm_lambda:0.5
sr_lambda:0.5
vgg_lambda:0
remove:False
flag:None
bayer_mode:rggb
seed:0
gpu_id:2
cl_weights:1,1,1,1
ssim_lambda:0
num_steps:4
custom_lr_path:None
custom_lr_train_dir:PixelShift200_train_crop_lr
custom_lr_valid_dir:PixelShift200_valid_crop_lr
post:last_conv-12-64-x4


==========     CONFIG END    =============
===> Loading the network ...
NET(
  (head): Sequential(
    (0): ConvBlock_3D(
      (0): Ref_pad(
        (pad): ReflectionPad2d((1, 1, 1, 1))
      )
      (1): Conv3d(4, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
    )
  )
  (trunk_rfab): Sequential(
    (0): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (1): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (2): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (3): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (4): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (5): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (6): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (7): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (8): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (9): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (10): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (11): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (12): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
    )
  )
  (trunk_trb): Sequential(
    (0): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (1): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (2): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (3): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (4): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (5): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (6): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (7): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (8): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (9): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (10): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (11): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (12): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (13): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (14): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
    (15): Ref_pad(
      (pad): ReflectionPad2d((1, 1, 1, 1))
    )
    (16): RFAB(
      (conv_b1): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
      )
      (avg_pool): AdaptiveAvgPool3d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv3d(64, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (1): ReLU(inplace=True)
        (2): Conv3d(8, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1))
        (3): Sigmoid()
      )
    )
    (17): ConvBlock_3D(
      (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))
      (1): ReLU(inplace=True)
    )
  )
  (tail): Sequential(
    (0): ConvBlock_2D(
      (0): Conv2d(128, 1024, kernel_size=(3, 3), stride=(1, 1))
    )
    (1): PixelShuffle(upscale_factor=8)
  )
  (tail_conv): ConvBlock_2D(
    (0): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (global_res): Sequential(
    (0): ReflectionPad2d((1, 1, 1, 1))
    (1): RTAB(
      (conv_b1): Sequential(
        (0): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (avg_pool): AdaptiveAvgPool2d(output_size=1)
      (conv_b2): Sequential(
        (0): Conv2d(56, 7, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(7, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (2): ConvBlock_2D(
      (0): Conv2d(56, 1024, kernel_size=(3, 3), stride=(1, 1))
      (1): ReLU(inplace=True)
    )
    (3): PixelShuffle(upscale_factor=8)
  )
)
  + Number of params: 6.55M
---------- Start training -------------
Epoch: [1][99/2342]	Iter:100	Loss:0.0443 (avg:0.0636)	
Epoch: [1][199/2342]	Iter:200	Loss:0.0387 (avg:0.0489)	
Epoch: [1][299/2342]	Iter:300	Loss:0.0192 (avg:0.0427)	
Epoch: [1][399/2342]	Iter:400	Loss:0.0215 (avg:0.0388)	
Epoch: [1][499/2342]	Iter:500	Loss:0.0234 (avg:0.0364)	
Epoch: [1][599/2342]	Iter:600	Loss:0.0227 (avg:0.0343)	
Epoch: [1][699/2342]	Iter:700	Loss:0.0157 (avg:0.0326)	
Epoch: [1][799/2342]	Iter:800	Loss:0.0275 (avg:0.0313)	
Epoch: [1][899/2342]	Iter:900	Loss:0.0198 (avg:0.0300)	
Epoch: [1][999/2342]	Iter:1000	Loss:0.0260 (avg:0.0290)	
Epoch: [1][1099/2342]	Iter:1100	Loss:0.0143 (avg:0.0281)	
Epoch: [1][1199/2342]	Iter:1200	Loss:0.0140 (avg:0.0273)	
Epoch: [1][1299/2342]	Iter:1300	Loss:0.0181 (avg:0.0266)	
Epoch: [1][1399/2342]	Iter:1400	Loss:0.0174 (avg:0.0260)	
Epoch: [1][1499/2342]	Iter:1500	Loss:0.0152 (avg:0.0255)	
Epoch: [1][1599/2342]	Iter:1600	Loss:0.0199 (avg:0.0250)	
Epoch: [1][1699/2342]	Iter:1700	Loss:0.0174 (avg:0.0245)	
Epoch: [1][1799/2342]	Iter:1800	Loss:0.0175 (avg:0.0242)	
Epoch: [1][1899/2342]	Iter:1900	Loss:0.0268 (avg:0.0238)	
Epoch: [1][1999/2342]	Iter:2000	Loss:0.0160 (avg:0.0235)	
Epoch: [1][2099/2342]	Iter:2100	Loss:0.0135 (avg:0.0232)	
Epoch: [1][2199/2342]	Iter:2200	Loss:0.0147 (avg:0.0229)	
Epoch: [1][2299/2342]	Iter:2300	Loss:0.0180 (avg:0.0226)	
Saving the final model.
Epoch: [2][57/2342]	Iter:2400	Loss:0.0137 (avg:0.0223)	
Epoch: [2][157/2342]	Iter:2500	Loss:0.0097 (avg:0.0221)	
Epoch: [2][257/2342]	Iter:2600	Loss:0.0156 (avg:0.0218)	
Epoch: [2][357/2342]	Iter:2700	Loss:0.0139 (avg:0.0216)	
Epoch: [2][457/2342]	Iter:2800	Loss:0.0188 (avg:0.0214)	
Epoch: [2][557/2342]	Iter:2900	Loss:0.0130 (avg:0.0212)	
Epoch: [2][657/2342]	Iter:3000	Loss:0.0186 (avg:0.0210)	
Epoch: [2][757/2342]	Iter:3100	Loss:0.0142 (avg:0.0208)	
Epoch: [2][857/2342]	Iter:3200	Loss:0.0148 (avg:0.0206)	
Epoch: [2][957/2342]	Iter:3300	Loss:0.0132 (avg:0.0205)	
Epoch: [2][1057/2342]	Iter:3400	Loss:0.0116 (avg:0.0203)	
Epoch: [2][1157/2342]	Iter:3500	Loss:0.0119 (avg:0.0202)	
Epoch: [2][1257/2342]	Iter:3600	Loss:0.0130 (avg:0.0201)	
Epoch: [2][1357/2342]	Iter:3700	Loss:0.0126 (avg:0.0199)	
Epoch: [2][1457/2342]	Iter:3800	Loss:0.0148 (avg:0.0198)	
Epoch: [2][1557/2342]	Iter:3900	Loss:0.0172 (avg:0.0197)	
Epoch: [2][1657/2342]	Iter:4000	Loss:0.0130 (avg:0.0196)	
Epoch: [2][1757/2342]	Iter:4100	Loss:0.0097 (avg:0.0194)	
Epoch: [2][1857/2342]	Iter:4200	Loss:0.0122 (avg:0.0193)	
Epoch: [2][1957/2342]	Iter:4300	Loss:0.0129 (avg:0.0192)	
Epoch: [2][2057/2342]	Iter:4400	Loss:0.0167 (avg:0.0191)	
Epoch: [2][2157/2342]	Iter:4500	Loss:0.0105 (avg:0.0190)	
Epoch: [2][2257/2342]	Iter:4600	Loss:0.0148 (avg:0.0189)	
Saving the final model.
Epoch: [3][15/2342]	Iter:4700	Loss:0.0110 (avg:0.0188)	
Epoch: [3][115/2342]	Iter:4800	Loss:0.0137 (avg:0.0187)	
Epoch: [3][215/2342]	Iter:4900	Loss:0.0143 (avg:0.0186)	
Iter: [5000][0/586]	TEST PSNR: ( 33.8485,  33.8485)	val_loss: ( 0.0163,  0.0163)	
Iter: [5000][1/586]	TEST PSNR: ( 33.0176,  33.4330)	val_loss: ( 0.0148,  0.0155)	
Iter: [5000][2/586]	TEST PSNR: ( 34.8583,  33.9081)	val_loss: ( 0.0133,  0.0148)	
Iter: [5000][3/586]	TEST PSNR: ( 30.5628,  33.0718)	val_loss: ( 0.0216,  0.0165)	
Iter: [5000][4/586]	TEST PSNR: ( 33.5048,  33.1584)	val_loss: ( 0.0168,  0.0165)	
Iter: [5000][5/586]	TEST PSNR: ( 35.5098,  33.5503)	val_loss: ( 0.0121,  0.0158)	
Iter: [5000][6/586]	TEST PSNR: ( 35.0244,  33.7609)	val_loss: ( 0.0135,  0.0155)	
Iter: [5000][7/586]	TEST PSNR: ( 34.6825,  33.8761)	val_loss: ( 0.0158,  0.0155)	
Iter: [5000][8/586]	TEST PSNR: ( 34.3501,  33.9288)	val_loss: ( 0.0171,  0.0157)	
Iter: [5000][9/586]	TEST PSNR: ( 31.6967,  33.7055)	val_loss: ( 0.0180,  0.0159)	
Iter: [5000][10/586]	TEST PSNR: ( 35.2188,  33.8431)	val_loss: ( 0.0104,  0.0154)	
Iter: [5000][11/586]	TEST PSNR: ( 34.8490,  33.9269)	val_loss: ( 0.0122,  0.0152)	
Iter: [5000][12/586]	TEST PSNR: ( 35.8160,  34.0722)	val_loss: ( 0.0137,  0.0150)	
Iter: [5000][13/586]	TEST PSNR: ( 33.6455,  34.0418)	val_loss: ( 0.0139,  0.0150)	
Iter: [5000][14/586]	TEST PSNR: ( 36.5788,  34.2109)	val_loss: ( 0.0116,  0.0147)	
Iter: [5000][15/586]	TEST PSNR: ( 35.2040,  34.2730)	val_loss: ( 0.0115,  0.0145)	
Iter: [5000][16/586]	TEST PSNR: ( 36.7102,  34.4163)	val_loss: ( 0.0110,  0.0143)	
Iter: [5000][17/586]	TEST PSNR: ( 38.9844,  34.6701)	val_loss: ( 0.0078,  0.0140)	
Iter: [5000][18/586]	TEST PSNR: ( 35.3033,  34.7034)	val_loss: ( 0.0118,  0.0139)	
Iter: [5000][19/586]	TEST PSNR: ( 34.1814,  34.6773)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][20/586]	TEST PSNR: ( 33.0056,  34.5977)	val_loss: ( 0.0143,  0.0139)	
Iter: [5000][21/586]	TEST PSNR: ( 38.9195,  34.7942)	val_loss: ( 0.0098,  0.0137)	
Iter: [5000][22/586]	TEST PSNR: ( 34.7102,  34.7905)	val_loss: ( 0.0146,  0.0137)	
Iter: [5000][23/586]	TEST PSNR: ( 34.3797,  34.7734)	val_loss: ( 0.0130,  0.0137)	
Iter: [5000][24/586]	TEST PSNR: ( 37.2740,  34.8734)	val_loss: ( 0.0106,  0.0136)	
Iter: [5000][25/586]	TEST PSNR: ( 34.7331,  34.8680)	val_loss: ( 0.0125,  0.0135)	
Iter: [5000][26/586]	TEST PSNR: ( 35.2192,  34.8810)	val_loss: ( 0.0108,  0.0134)	
Iter: [5000][27/586]	TEST PSNR: ( 33.8527,  34.8443)	val_loss: ( 0.0136,  0.0134)	
Iter: [5000][28/586]	TEST PSNR: ( 34.9882,  34.8493)	val_loss: ( 0.0118,  0.0134)	
Iter: [5000][29/586]	TEST PSNR: ( 32.3784,  34.7669)	val_loss: ( 0.0163,  0.0135)	
Iter: [5000][30/586]	TEST PSNR: ( 32.6625,  34.6990)	val_loss: ( 0.0141,  0.0135)	
Iter: [5000][31/586]	TEST PSNR: ( 31.7840,  34.6079)	val_loss: ( 0.0180,  0.0136)	
Iter: [5000][32/586]	TEST PSNR: ( 35.8649,  34.6460)	val_loss: ( 0.0132,  0.0136)	
Iter: [5000][33/586]	TEST PSNR: ( 35.7481,  34.6784)	val_loss: ( 0.0110,  0.0135)	
Iter: [5000][34/586]	TEST PSNR: ( 35.6996,  34.7076)	val_loss: ( 0.0123,  0.0135)	
Iter: [5000][35/586]	TEST PSNR: ( 36.2623,  34.7508)	val_loss: ( 0.0118,  0.0135)	
Iter: [5000][36/586]	TEST PSNR: ( 36.7033,  34.8036)	val_loss: ( 0.0101,  0.0134)	
Iter: [5000][37/586]	TEST PSNR: ( 37.3571,  34.8708)	val_loss: ( 0.0090,  0.0133)	
Iter: [5000][38/586]	TEST PSNR: ( 36.7239,  34.9183)	val_loss: ( 0.0118,  0.0132)	
Iter: [5000][39/586]	TEST PSNR: ( 37.2898,  34.9776)	val_loss: ( 0.0104,  0.0132)	
Iter: [5000][40/586]	TEST PSNR: ( 30.7601,  34.8747)	val_loss: ( 0.0250,  0.0134)	
Iter: [5000][41/586]	TEST PSNR: ( 31.7368,  34.8000)	val_loss: ( 0.0183,  0.0136)	
Iter: [5000][42/586]	TEST PSNR: ( 35.1961,  34.8092)	val_loss: ( 0.0134,  0.0136)	
Iter: [5000][43/586]	TEST PSNR: ( 34.7364,  34.8075)	val_loss: ( 0.0130,  0.0135)	
Iter: [5000][44/586]	TEST PSNR: ( 36.3808,  34.8425)	val_loss: ( 0.0133,  0.0135)	
Iter: [5000][45/586]	TEST PSNR: ( 35.9232,  34.8660)	val_loss: ( 0.0148,  0.0136)	
Iter: [5000][46/586]	TEST PSNR: ( 35.8333,  34.8866)	val_loss: ( 0.0165,  0.0136)	
Iter: [5000][47/586]	TEST PSNR: ( 34.0622,  34.8694)	val_loss: ( 0.0138,  0.0136)	
Iter: [5000][48/586]	TEST PSNR: ( 32.3042,  34.8171)	val_loss: ( 0.0159,  0.0137)	
Iter: [5000][49/586]	TEST PSNR: ( 35.1218,  34.8232)	val_loss: ( 0.0134,  0.0137)	
Iter: [5000][50/586]	TEST PSNR: ( 35.2976,  34.8325)	val_loss: ( 0.0111,  0.0136)	
Iter: [5000][51/586]	TEST PSNR: ( 29.6444,  34.7327)	val_loss: ( 0.0204,  0.0138)	
Iter: [5000][52/586]	TEST PSNR: ( 35.1874,  34.7413)	val_loss: ( 0.0119,  0.0137)	
Iter: [5000][53/586]	TEST PSNR: ( 35.3029,  34.7517)	val_loss: ( 0.0132,  0.0137)	
Iter: [5000][54/586]	TEST PSNR: ( 37.5503,  34.8026)	val_loss: ( 0.0109,  0.0137)	
Iter: [5000][55/586]	TEST PSNR: ( 33.9414,  34.7872)	val_loss: ( 0.0146,  0.0137)	
Iter: [5000][56/586]	TEST PSNR: ( 32.1129,  34.7403)	val_loss: ( 0.0146,  0.0137)	
Iter: [5000][57/586]	TEST PSNR: ( 38.0714,  34.7977)	val_loss: ( 0.0117,  0.0137)	
Iter: [5000][58/586]	TEST PSNR: ( 33.8992,  34.7825)	val_loss: ( 0.0131,  0.0136)	
Iter: [5000][59/586]	TEST PSNR: ( 34.4913,  34.7776)	val_loss: ( 0.0131,  0.0136)	
Iter: [5000][60/586]	TEST PSNR: ( 34.6894,  34.7762)	val_loss: ( 0.0139,  0.0136)	
Iter: [5000][61/586]	TEST PSNR: ( 32.8169,  34.7446)	val_loss: ( 0.0183,  0.0137)	
Iter: [5000][62/586]	TEST PSNR: ( 35.9530,  34.7637)	val_loss: ( 0.0121,  0.0137)	
Iter: [5000][63/586]	TEST PSNR: ( 33.5141,  34.7442)	val_loss: ( 0.0165,  0.0137)	
Iter: [5000][64/586]	TEST PSNR: ( 34.1755,  34.7355)	val_loss: ( 0.0163,  0.0138)	
Iter: [5000][65/586]	TEST PSNR: ( 36.1483,  34.7569)	val_loss: ( 0.0112,  0.0137)	
Iter: [5000][66/586]	TEST PSNR: ( 34.1298,  34.7475)	val_loss: ( 0.0159,  0.0138)	
Iter: [5000][67/586]	TEST PSNR: ( 34.1002,  34.7380)	val_loss: ( 0.0147,  0.0138)	
Iter: [5000][68/586]	TEST PSNR: ( 35.0068,  34.7419)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][69/586]	TEST PSNR: ( 34.7189,  34.7416)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][70/586]	TEST PSNR: ( 34.0774,  34.7322)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][71/586]	TEST PSNR: ( 36.2288,  34.7530)	val_loss: ( 0.0124,  0.0138)	
Iter: [5000][72/586]	TEST PSNR: ( 31.6346,  34.7103)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][73/586]	TEST PSNR: ( 35.0659,  34.7151)	val_loss: ( 0.0119,  0.0138)	
Iter: [5000][74/586]	TEST PSNR: ( 33.7930,  34.7028)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][75/586]	TEST PSNR: ( 32.1633,  34.6694)	val_loss: ( 0.0163,  0.0138)	
Iter: [5000][76/586]	TEST PSNR: ( 34.3610,  34.6654)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][77/586]	TEST PSNR: ( 33.4236,  34.6495)	val_loss: ( 0.0153,  0.0138)	
Iter: [5000][78/586]	TEST PSNR: ( 34.8768,  34.6523)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][79/586]	TEST PSNR: ( 33.9573,  34.6436)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][80/586]	TEST PSNR: ( 34.9121,  34.6470)	val_loss: ( 0.0140,  0.0138)	
Iter: [5000][81/586]	TEST PSNR: ( 34.0814,  34.6401)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][82/586]	TEST PSNR: ( 36.2543,  34.6595)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][83/586]	TEST PSNR: ( 31.9814,  34.6276)	val_loss: ( 0.0167,  0.0138)	
Iter: [5000][84/586]	TEST PSNR: ( 36.6880,  34.6519)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][85/586]	TEST PSNR: ( 34.8858,  34.6546)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][86/586]	TEST PSNR: ( 35.2633,  34.6616)	val_loss: ( 0.0113,  0.0137)	
Iter: [5000][87/586]	TEST PSNR: ( 33.7246,  34.6509)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][88/586]	TEST PSNR: ( 35.6367,  34.6620)	val_loss: ( 0.0104,  0.0137)	
Iter: [5000][89/586]	TEST PSNR: ( 37.5863,  34.6945)	val_loss: ( 0.0086,  0.0137)	
Iter: [5000][90/586]	TEST PSNR: ( 35.5556,  34.7040)	val_loss: ( 0.0133,  0.0137)	
Iter: [5000][91/586]	TEST PSNR: ( 35.0101,  34.7073)	val_loss: ( 0.0138,  0.0137)	
Iter: [5000][92/586]	TEST PSNR: ( 35.0919,  34.7114)	val_loss: ( 0.0121,  0.0136)	
Iter: [5000][93/586]	TEST PSNR: ( 32.7447,  34.6905)	val_loss: ( 0.0195,  0.0137)	
Iter: [5000][94/586]	TEST PSNR: ( 32.5885,  34.6684)	val_loss: ( 0.0158,  0.0137)	
Iter: [5000][95/586]	TEST PSNR: ( 33.8362,  34.6597)	val_loss: ( 0.0179,  0.0138)	
Iter: [5000][96/586]	TEST PSNR: ( 32.3398,  34.6358)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][97/586]	TEST PSNR: ( 32.5049,  34.6141)	val_loss: ( 0.0148,  0.0138)	
Iter: [5000][98/586]	TEST PSNR: ( 33.9290,  34.6071)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][99/586]	TEST PSNR: ( 33.0575,  34.5916)	val_loss: ( 0.0148,  0.0138)	
Iter: [5000][100/586]	TEST PSNR: ( 34.6349,  34.5921)	val_loss: ( 0.0117,  0.0138)	
Iter: [5000][101/586]	TEST PSNR: ( 33.9053,  34.5853)	val_loss: ( 0.0147,  0.0138)	
Iter: [5000][102/586]	TEST PSNR: ( 36.6091,  34.6050)	val_loss: ( 0.0100,  0.0138)	
Iter: [5000][103/586]	TEST PSNR: ( 32.9732,  34.5893)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][104/586]	TEST PSNR: ( 32.7399,  34.5717)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][105/586]	TEST PSNR: ( 33.0873,  34.5577)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][106/586]	TEST PSNR: ( 34.4258,  34.5564)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][107/586]	TEST PSNR: ( 33.6931,  34.5484)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][108/586]	TEST PSNR: ( 35.8988,  34.5608)	val_loss: ( 0.0103,  0.0138)	
Iter: [5000][109/586]	TEST PSNR: ( 32.6543,  34.5435)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][110/586]	TEST PSNR: ( 35.0144,  34.5477)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][111/586]	TEST PSNR: ( 31.6946,  34.5223)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][112/586]	TEST PSNR: ( 31.9535,  34.4995)	val_loss: ( 0.0165,  0.0138)	
Iter: [5000][113/586]	TEST PSNR: ( 36.4014,  34.5162)	val_loss: ( 0.0104,  0.0138)	
Iter: [5000][114/586]	TEST PSNR: ( 35.1927,  34.5221)	val_loss: ( 0.0120,  0.0138)	
Iter: [5000][115/586]	TEST PSNR: ( 34.9930,  34.5262)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][116/586]	TEST PSNR: ( 34.6886,  34.5275)	val_loss: ( 0.0115,  0.0137)	
Iter: [5000][117/586]	TEST PSNR: ( 33.0169,  34.5147)	val_loss: ( 0.0199,  0.0138)	
Iter: [5000][118/586]	TEST PSNR: ( 35.6250,  34.5241)	val_loss: ( 0.0157,  0.0138)	
Iter: [5000][119/586]	TEST PSNR: ( 36.3086,  34.5389)	val_loss: ( 0.0120,  0.0138)	
Iter: [5000][120/586]	TEST PSNR: ( 37.3658,  34.5623)	val_loss: ( 0.0096,  0.0138)	
Iter: [5000][121/586]	TEST PSNR: ( 34.2604,  34.5598)	val_loss: ( 0.0142,  0.0138)	
Iter: [5000][122/586]	TEST PSNR: ( 32.7126,  34.5448)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][123/586]	TEST PSNR: ( 34.0748,  34.5410)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][124/586]	TEST PSNR: ( 32.9690,  34.5285)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][125/586]	TEST PSNR: ( 35.0770,  34.5328)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][126/586]	TEST PSNR: ( 34.2405,  34.5305)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][127/586]	TEST PSNR: ( 34.4177,  34.5296)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][128/586]	TEST PSNR: ( 35.1322,  34.5343)	val_loss: ( 0.0125,  0.0138)	
Iter: [5000][129/586]	TEST PSNR: ( 36.8930,  34.5524)	val_loss: ( 0.0136,  0.0138)	
Iter: [5000][130/586]	TEST PSNR: ( 34.6641,  34.5533)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][131/586]	TEST PSNR: ( 38.2859,  34.5816)	val_loss: ( 0.0093,  0.0137)	
Iter: [5000][132/586]	TEST PSNR: ( 33.4529,  34.5731)	val_loss: ( 0.0220,  0.0138)	
Iter: [5000][133/586]	TEST PSNR: ( 32.5447,  34.5579)	val_loss: ( 0.0165,  0.0138)	
Iter: [5000][134/586]	TEST PSNR: ( 34.4271,  34.5570)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][135/586]	TEST PSNR: ( 33.3145,  34.5478)	val_loss: ( 0.0132,  0.0138)	
Iter: [5000][136/586]	TEST PSNR: ( 36.5905,  34.5627)	val_loss: ( 0.0097,  0.0138)	
Iter: [5000][137/586]	TEST PSNR: ( 33.4070,  34.5544)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][138/586]	TEST PSNR: ( 36.5456,  34.5687)	val_loss: ( 0.0111,  0.0138)	
Iter: [5000][139/586]	TEST PSNR: ( 32.2289,  34.5520)	val_loss: ( 0.0188,  0.0138)	
Iter: [5000][140/586]	TEST PSNR: ( 34.5895,  34.5523)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][141/586]	TEST PSNR: ( 32.7962,  34.5399)	val_loss: ( 0.0148,  0.0138)	
Iter: [5000][142/586]	TEST PSNR: ( 34.6491,  34.5406)	val_loss: ( 0.0124,  0.0138)	
Iter: [5000][143/586]	TEST PSNR: ( 33.9551,  34.5366)	val_loss: ( 0.0152,  0.0138)	
Iter: [5000][144/586]	TEST PSNR: ( 36.2189,  34.5482)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][145/586]	TEST PSNR: ( 31.6721,  34.5285)	val_loss: ( 0.0194,  0.0138)	
Iter: [5000][146/586]	TEST PSNR: ( 31.1801,  34.5057)	val_loss: ( 0.0189,  0.0139)	
Iter: [5000][147/586]	TEST PSNR: ( 34.7464,  34.5073)	val_loss: ( 0.0145,  0.0139)	
Iter: [5000][148/586]	TEST PSNR: ( 34.1204,  34.5047)	val_loss: ( 0.0150,  0.0139)	
Iter: [5000][149/586]	TEST PSNR: ( 33.8580,  34.5004)	val_loss: ( 0.0127,  0.0139)	
Iter: [5000][150/586]	TEST PSNR: ( 35.8297,  34.5092)	val_loss: ( 0.0144,  0.0139)	
Iter: [5000][151/586]	TEST PSNR: ( 33.8532,  34.5049)	val_loss: ( 0.0160,  0.0139)	
Iter: [5000][152/586]	TEST PSNR: ( 33.9277,  34.5011)	val_loss: ( 0.0138,  0.0139)	
Iter: [5000][153/586]	TEST PSNR: ( 32.5866,  34.4887)	val_loss: ( 0.0154,  0.0139)	
Iter: [5000][154/586]	TEST PSNR: ( 34.6397,  34.4897)	val_loss: ( 0.0121,  0.0139)	
Iter: [5000][155/586]	TEST PSNR: ( 34.4924,  34.4897)	val_loss: ( 0.0153,  0.0139)	
Iter: [5000][156/586]	TEST PSNR: ( 33.8355,  34.4855)	val_loss: ( 0.0192,  0.0139)	
Iter: [5000][157/586]	TEST PSNR: ( 36.5050,  34.4983)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][158/586]	TEST PSNR: ( 37.4940,  34.5172)	val_loss: ( 0.0092,  0.0139)	
Iter: [5000][159/586]	TEST PSNR: ( 36.5885,  34.5301)	val_loss: ( 0.0099,  0.0139)	
Iter: [5000][160/586]	TEST PSNR: ( 34.2967,  34.5286)	val_loss: ( 0.0134,  0.0139)	
Iter: [5000][161/586]	TEST PSNR: ( 36.1348,  34.5386)	val_loss: ( 0.0122,  0.0139)	
Iter: [5000][162/586]	TEST PSNR: ( 35.8602,  34.5467)	val_loss: ( 0.0094,  0.0138)	
Iter: [5000][163/586]	TEST PSNR: ( 32.6389,  34.5350)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][164/586]	TEST PSNR: ( 36.2295,  34.5453)	val_loss: ( 0.0106,  0.0138)	
Iter: [5000][165/586]	TEST PSNR: ( 35.8834,  34.5534)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][166/586]	TEST PSNR: ( 36.7661,  34.5666)	val_loss: ( 0.0102,  0.0138)	
Iter: [5000][167/586]	TEST PSNR: ( 35.7677,  34.5738)	val_loss: ( 0.0101,  0.0138)	
Iter: [5000][168/586]	TEST PSNR: ( 38.2708,  34.5956)	val_loss: ( 0.0093,  0.0137)	
Iter: [5000][169/586]	TEST PSNR: ( 33.1031,  34.5869)	val_loss: ( 0.0149,  0.0137)	
Iter: [5000][170/586]	TEST PSNR: ( 36.7813,  34.5997)	val_loss: ( 0.0101,  0.0137)	
Iter: [5000][171/586]	TEST PSNR: ( 33.3507,  34.5924)	val_loss: ( 0.0144,  0.0137)	
Iter: [5000][172/586]	TEST PSNR: ( 33.7323,  34.5875)	val_loss: ( 0.0142,  0.0137)	
Iter: [5000][173/586]	TEST PSNR: ( 33.5033,  34.5812)	val_loss: ( 0.0135,  0.0137)	
Iter: [5000][174/586]	TEST PSNR: ( 34.6969,  34.5819)	val_loss: ( 0.0123,  0.0137)	
Iter: [5000][175/586]	TEST PSNR: ( 34.2936,  34.5803)	val_loss: ( 0.0122,  0.0137)	
Iter: [5000][176/586]	TEST PSNR: ( 35.1788,  34.5836)	val_loss: ( 0.0117,  0.0137)	
Iter: [5000][177/586]	TEST PSNR: ( 34.4342,  34.5828)	val_loss: ( 0.0129,  0.0137)	
Iter: [5000][178/586]	TEST PSNR: ( 33.2455,  34.5753)	val_loss: ( 0.0143,  0.0137)	
Iter: [5000][179/586]	TEST PSNR: ( 34.3951,  34.5743)	val_loss: ( 0.0149,  0.0137)	
Iter: [5000][180/586]	TEST PSNR: ( 36.5616,  34.5853)	val_loss: ( 0.0122,  0.0137)	
Iter: [5000][181/586]	TEST PSNR: ( 35.2030,  34.5887)	val_loss: ( 0.0132,  0.0137)	
Iter: [5000][182/586]	TEST PSNR: ( 32.6083,  34.5779)	val_loss: ( 0.0190,  0.0137)	
Iter: [5000][183/586]	TEST PSNR: ( 33.9273,  34.5743)	val_loss: ( 0.0136,  0.0137)	
Iter: [5000][184/586]	TEST PSNR: ( 33.3370,  34.5677)	val_loss: ( 0.0146,  0.0137)	
Iter: [5000][185/586]	TEST PSNR: ( 35.9941,  34.5753)	val_loss: ( 0.0112,  0.0137)	
Iter: [5000][186/586]	TEST PSNR: ( 35.0924,  34.5781)	val_loss: ( 0.0106,  0.0137)	
Iter: [5000][187/586]	TEST PSNR: ( 35.1918,  34.5814)	val_loss: ( 0.0150,  0.0137)	
Iter: [5000][188/586]	TEST PSNR: ( 37.7215,  34.5980)	val_loss: ( 0.0089,  0.0137)	
Iter: [5000][189/586]	TEST PSNR: ( 33.9146,  34.5944)	val_loss: ( 0.0134,  0.0137)	
Iter: [5000][190/586]	TEST PSNR: ( 30.0827,  34.5707)	val_loss: ( 0.0212,  0.0137)	
Iter: [5000][191/586]	TEST PSNR: ( 33.6297,  34.5658)	val_loss: ( 0.0131,  0.0137)	
Iter: [5000][192/586]	TEST PSNR: ( 32.4000,  34.5546)	val_loss: ( 0.0169,  0.0137)	
Iter: [5000][193/586]	TEST PSNR: ( 31.6003,  34.5394)	val_loss: ( 0.0188,  0.0138)	
Iter: [5000][194/586]	TEST PSNR: ( 33.6175,  34.5347)	val_loss: ( 0.0142,  0.0138)	
Iter: [5000][195/586]	TEST PSNR: ( 35.4398,  34.5393)	val_loss: ( 0.0108,  0.0137)	
Iter: [5000][196/586]	TEST PSNR: ( 31.4400,  34.5236)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][197/586]	TEST PSNR: ( 33.1609,  34.5167)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][198/586]	TEST PSNR: ( 35.8982,  34.5236)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][199/586]	TEST PSNR: ( 33.9258,  34.5206)	val_loss: ( 0.0140,  0.0138)	
Iter: [5000][200/586]	TEST PSNR: ( 33.1984,  34.5140)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][201/586]	TEST PSNR: ( 33.8770,  34.5109)	val_loss: ( 0.0130,  0.0138)	
Iter: [5000][202/586]	TEST PSNR: ( 33.1925,  34.5044)	val_loss: ( 0.0170,  0.0138)	
Iter: [5000][203/586]	TEST PSNR: ( 29.6981,  34.4808)	val_loss: ( 0.0245,  0.0138)	
Iter: [5000][204/586]	TEST PSNR: ( 33.9364,  34.4782)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][205/586]	TEST PSNR: ( 32.3786,  34.4680)	val_loss: ( 0.0147,  0.0138)	
Iter: [5000][206/586]	TEST PSNR: ( 33.6956,  34.4643)	val_loss: ( 0.0181,  0.0139)	
Iter: [5000][207/586]	TEST PSNR: ( 33.7796,  34.4610)	val_loss: ( 0.0143,  0.0139)	
Iter: [5000][208/586]	TEST PSNR: ( 33.1814,  34.4548)	val_loss: ( 0.0162,  0.0139)	
Iter: [5000][209/586]	TEST PSNR: ( 34.6185,  34.4556)	val_loss: ( 0.0148,  0.0139)	
Iter: [5000][210/586]	TEST PSNR: ( 31.2792,  34.4406)	val_loss: ( 0.0152,  0.0139)	
Iter: [5000][211/586]	TEST PSNR: ( 33.1316,  34.4344)	val_loss: ( 0.0168,  0.0139)	
Iter: [5000][212/586]	TEST PSNR: ( 33.7722,  34.4313)	val_loss: ( 0.0123,  0.0139)	
Iter: [5000][213/586]	TEST PSNR: ( 33.3605,  34.4263)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][214/586]	TEST PSNR: ( 35.2165,  34.4300)	val_loss: ( 0.0156,  0.0139)	
Iter: [5000][215/586]	TEST PSNR: ( 31.2291,  34.4151)	val_loss: ( 0.0177,  0.0139)	
Iter: [5000][216/586]	TEST PSNR: ( 36.0962,  34.4229)	val_loss: ( 0.0106,  0.0139)	
Iter: [5000][217/586]	TEST PSNR: ( 35.2821,  34.4268)	val_loss: ( 0.0125,  0.0139)	
Iter: [5000][218/586]	TEST PSNR: ( 32.8952,  34.4198)	val_loss: ( 0.0177,  0.0139)	
Iter: [5000][219/586]	TEST PSNR: ( 34.2089,  34.4189)	val_loss: ( 0.0126,  0.0139)	
Iter: [5000][220/586]	TEST PSNR: ( 34.1514,  34.4177)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][221/586]	TEST PSNR: ( 33.0914,  34.4117)	val_loss: ( 0.0152,  0.0139)	
Iter: [5000][222/586]	TEST PSNR: ( 35.2711,  34.4155)	val_loss: ( 0.0128,  0.0139)	
Iter: [5000][223/586]	TEST PSNR: ( 32.5593,  34.4073)	val_loss: ( 0.0190,  0.0139)	
Iter: [5000][224/586]	TEST PSNR: ( 36.3911,  34.4161)	val_loss: ( 0.0104,  0.0139)	
Iter: [5000][225/586]	TEST PSNR: ( 34.7919,  34.4177)	val_loss: ( 0.0132,  0.0139)	
Iter: [5000][226/586]	TEST PSNR: ( 34.1599,  34.4166)	val_loss: ( 0.0143,  0.0139)	
Iter: [5000][227/586]	TEST PSNR: ( 33.5410,  34.4128)	val_loss: ( 0.0182,  0.0139)	
Iter: [5000][228/586]	TEST PSNR: ( 33.7251,  34.4098)	val_loss: ( 0.0127,  0.0139)	
Iter: [5000][229/586]	TEST PSNR: ( 37.1938,  34.4219)	val_loss: ( 0.0094,  0.0139)	
Iter: [5000][230/586]	TEST PSNR: ( 36.4155,  34.4305)	val_loss: ( 0.0128,  0.0139)	
Iter: [5000][231/586]	TEST PSNR: ( 35.8211,  34.4365)	val_loss: ( 0.0114,  0.0139)	
Iter: [5000][232/586]	TEST PSNR: ( 32.2597,  34.4271)	val_loss: ( 0.0206,  0.0139)	
Iter: [5000][233/586]	TEST PSNR: ( 36.0725,  34.4342)	val_loss: ( 0.0121,  0.0139)	
Iter: [5000][234/586]	TEST PSNR: ( 37.2181,  34.4460)	val_loss: ( 0.0136,  0.0139)	
Iter: [5000][235/586]	TEST PSNR: ( 35.2450,  34.4494)	val_loss: ( 0.0118,  0.0139)	
Iter: [5000][236/586]	TEST PSNR: ( 33.7630,  34.4465)	val_loss: ( 0.0160,  0.0139)	
Iter: [5000][237/586]	TEST PSNR: ( 35.8728,  34.4525)	val_loss: ( 0.0111,  0.0139)	
Iter: [5000][238/586]	TEST PSNR: ( 34.4529,  34.4525)	val_loss: ( 0.0188,  0.0139)	
Iter: [5000][239/586]	TEST PSNR: ( 33.2816,  34.4476)	val_loss: ( 0.0143,  0.0139)	
Iter: [5000][240/586]	TEST PSNR: ( 35.1909,  34.4507)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][241/586]	TEST PSNR: ( 33.8501,  34.4482)	val_loss: ( 0.0170,  0.0139)	
Iter: [5000][242/586]	TEST PSNR: ( 34.2816,  34.4475)	val_loss: ( 0.0114,  0.0139)	
Iter: [5000][243/586]	TEST PSNR: ( 32.7297,  34.4405)	val_loss: ( 0.0170,  0.0139)	
Iter: [5000][244/586]	TEST PSNR: ( 35.1973,  34.4436)	val_loss: ( 0.0125,  0.0139)	
Iter: [5000][245/586]	TEST PSNR: ( 34.6752,  34.4445)	val_loss: ( 0.0122,  0.0139)	
Iter: [5000][246/586]	TEST PSNR: ( 34.0553,  34.4430)	val_loss: ( 0.0150,  0.0139)	
Iter: [5000][247/586]	TEST PSNR: ( 35.7292,  34.4481)	val_loss: ( 0.0163,  0.0139)	
Iter: [5000][248/586]	TEST PSNR: ( 32.3010,  34.4395)	val_loss: ( 0.0157,  0.0139)	
Iter: [5000][249/586]	TEST PSNR: ( 34.0012,  34.4378)	val_loss: ( 0.0141,  0.0139)	
Iter: [5000][250/586]	TEST PSNR: ( 35.1149,  34.4405)	val_loss: ( 0.0129,  0.0139)	
Iter: [5000][251/586]	TEST PSNR: ( 35.9810,  34.4466)	val_loss: ( 0.0130,  0.0139)	
Iter: [5000][252/586]	TEST PSNR: ( 35.6456,  34.4513)	val_loss: ( 0.0123,  0.0139)	
Iter: [5000][253/586]	TEST PSNR: ( 32.6636,  34.4443)	val_loss: ( 0.0243,  0.0140)	
Iter: [5000][254/586]	TEST PSNR: ( 33.9998,  34.4425)	val_loss: ( 0.0135,  0.0140)	
Iter: [5000][255/586]	TEST PSNR: ( 34.6713,  34.4434)	val_loss: ( 0.0125,  0.0140)	
Iter: [5000][256/586]	TEST PSNR: ( 35.2651,  34.4466)	val_loss: ( 0.0138,  0.0140)	
Iter: [5000][257/586]	TEST PSNR: ( 30.9425,  34.4330)	val_loss: ( 0.0201,  0.0140)	
Iter: [5000][258/586]	TEST PSNR: ( 34.1142,  34.4318)	val_loss: ( 0.0150,  0.0140)	
Iter: [5000][259/586]	TEST PSNR: ( 34.2007,  34.4309)	val_loss: ( 0.0137,  0.0140)	
Iter: [5000][260/586]	TEST PSNR: ( 33.3365,  34.4267)	val_loss: ( 0.0143,  0.0140)	
Iter: [5000][261/586]	TEST PSNR: ( 32.5182,  34.4195)	val_loss: ( 0.0164,  0.0140)	
Iter: [5000][262/586]	TEST PSNR: ( 34.9201,  34.4214)	val_loss: ( 0.0131,  0.0140)	
Iter: [5000][263/586]	TEST PSNR: ( 33.8268,  34.4191)	val_loss: ( 0.0151,  0.0140)	
Iter: [5000][264/586]	TEST PSNR: ( 36.0097,  34.4251)	val_loss: ( 0.0100,  0.0140)	
Iter: [5000][265/586]	TEST PSNR: ( 35.1349,  34.4278)	val_loss: ( 0.0121,  0.0140)	
Iter: [5000][266/586]	TEST PSNR: ( 36.0679,  34.4339)	val_loss: ( 0.0111,  0.0140)	
Iter: [5000][267/586]	TEST PSNR: ( 35.5825,  34.4382)	val_loss: ( 0.0140,  0.0140)	
Iter: [5000][268/586]	TEST PSNR: ( 34.7330,  34.4393)	val_loss: ( 0.0130,  0.0140)	
Iter: [5000][269/586]	TEST PSNR: ( 35.4822,  34.4432)	val_loss: ( 0.0134,  0.0140)	
Iter: [5000][270/586]	TEST PSNR: ( 34.9953,  34.4452)	val_loss: ( 0.0124,  0.0140)	
Iter: [5000][271/586]	TEST PSNR: ( 34.6879,  34.4461)	val_loss: ( 0.0124,  0.0140)	
Iter: [5000][272/586]	TEST PSNR: ( 33.4425,  34.4424)	val_loss: ( 0.0147,  0.0140)	
Iter: [5000][273/586]	TEST PSNR: ( 35.8100,  34.4474)	val_loss: ( 0.0127,  0.0139)	
Iter: [5000][274/586]	TEST PSNR: ( 35.4613,  34.4511)	val_loss: ( 0.0122,  0.0139)	
Iter: [5000][275/586]	TEST PSNR: ( 36.6686,  34.4591)	val_loss: ( 0.0108,  0.0139)	
Iter: [5000][276/586]	TEST PSNR: ( 35.0596,  34.4613)	val_loss: ( 0.0118,  0.0139)	
Iter: [5000][277/586]	TEST PSNR: ( 34.3969,  34.4611)	val_loss: ( 0.0133,  0.0139)	
Iter: [5000][278/586]	TEST PSNR: ( 36.8461,  34.4696)	val_loss: ( 0.0112,  0.0139)	
Iter: [5000][279/586]	TEST PSNR: ( 35.0864,  34.4718)	val_loss: ( 0.0133,  0.0139)	
Iter: [5000][280/586]	TEST PSNR: ( 37.6157,  34.4830)	val_loss: ( 0.0093,  0.0139)	
Iter: [5000][281/586]	TEST PSNR: ( 34.4690,  34.4830)	val_loss: ( 0.0118,  0.0139)	
Iter: [5000][282/586]	TEST PSNR: ( 34.0834,  34.4815)	val_loss: ( 0.0126,  0.0139)	
Iter: [5000][283/586]	TEST PSNR: ( 35.9526,  34.4867)	val_loss: ( 0.0108,  0.0139)	
Iter: [5000][284/586]	TEST PSNR: ( 38.2464,  34.4999)	val_loss: ( 0.0096,  0.0139)	
Iter: [5000][285/586]	TEST PSNR: ( 36.3148,  34.5063)	val_loss: ( 0.0136,  0.0139)	
Iter: [5000][286/586]	TEST PSNR: ( 33.6232,  34.5032)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][287/586]	TEST PSNR: ( 35.3986,  34.5063)	val_loss: ( 0.0111,  0.0138)	
Iter: [5000][288/586]	TEST PSNR: ( 33.3713,  34.5024)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][289/586]	TEST PSNR: ( 32.3394,  34.4949)	val_loss: ( 0.0165,  0.0139)	
Iter: [5000][290/586]	TEST PSNR: ( 36.6368,  34.5023)	val_loss: ( 0.0126,  0.0139)	
Iter: [5000][291/586]	TEST PSNR: ( 34.6284,  34.5027)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][292/586]	TEST PSNR: ( 36.6548,  34.5100)	val_loss: ( 0.0105,  0.0138)	
Iter: [5000][293/586]	TEST PSNR: ( 32.5624,  34.5034)	val_loss: ( 0.0178,  0.0139)	
Iter: [5000][294/586]	TEST PSNR: ( 34.8123,  34.5045)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][295/586]	TEST PSNR: ( 35.4258,  34.5076)	val_loss: ( 0.0118,  0.0138)	
Iter: [5000][296/586]	TEST PSNR: ( 34.2301,  34.5066)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][297/586]	TEST PSNR: ( 33.2540,  34.5024)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][298/586]	TEST PSNR: ( 34.1381,  34.5012)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][299/586]	TEST PSNR: ( 32.3616,  34.4941)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][300/586]	TEST PSNR: ( 37.2309,  34.5032)	val_loss: ( 0.0127,  0.0138)	
Iter: [5000][301/586]	TEST PSNR: ( 34.8254,  34.5042)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][302/586]	TEST PSNR: ( 33.3644,  34.5005)	val_loss: ( 0.0142,  0.0138)	
Iter: [5000][303/586]	TEST PSNR: ( 34.0083,  34.4989)	val_loss: ( 0.0183,  0.0139)	
Iter: [5000][304/586]	TEST PSNR: ( 32.4844,  34.4923)	val_loss: ( 0.0178,  0.0139)	
Iter: [5000][305/586]	TEST PSNR: ( 33.7762,  34.4899)	val_loss: ( 0.0147,  0.0139)	
Iter: [5000][306/586]	TEST PSNR: ( 37.0568,  34.4983)	val_loss: ( 0.0106,  0.0139)	
Iter: [5000][307/586]	TEST PSNR: ( 33.5625,  34.4952)	val_loss: ( 0.0146,  0.0139)	
Iter: [5000][308/586]	TEST PSNR: ( 35.2904,  34.4978)	val_loss: ( 0.0128,  0.0139)	
Iter: [5000][309/586]	TEST PSNR: ( 33.3123,  34.4940)	val_loss: ( 0.0137,  0.0139)	
Iter: [5000][310/586]	TEST PSNR: ( 39.5119,  34.5101)	val_loss: ( 0.0078,  0.0138)	
Iter: [5000][311/586]	TEST PSNR: ( 34.9310,  34.5115)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][312/586]	TEST PSNR: ( 31.7400,  34.5026)	val_loss: ( 0.0186,  0.0139)	
Iter: [5000][313/586]	TEST PSNR: ( 35.4661,  34.5057)	val_loss: ( 0.0098,  0.0138)	
Iter: [5000][314/586]	TEST PSNR: ( 34.5654,  34.5059)	val_loss: ( 0.0115,  0.0138)	
Iter: [5000][315/586]	TEST PSNR: ( 32.9363,  34.5009)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][316/586]	TEST PSNR: ( 36.3861,  34.5069)	val_loss: ( 0.0103,  0.0138)	
Iter: [5000][317/586]	TEST PSNR: ( 33.9997,  34.5053)	val_loss: ( 0.0152,  0.0138)	
Iter: [5000][318/586]	TEST PSNR: ( 35.9018,  34.5096)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][319/586]	TEST PSNR: ( 36.1976,  34.5149)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][320/586]	TEST PSNR: ( 33.6890,  34.5123)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][321/586]	TEST PSNR: ( 37.7298,  34.5223)	val_loss: ( 0.0090,  0.0138)	
Iter: [5000][322/586]	TEST PSNR: ( 31.6568,  34.5135)	val_loss: ( 0.0178,  0.0138)	
Iter: [5000][323/586]	TEST PSNR: ( 36.8694,  34.5207)	val_loss: ( 0.0101,  0.0138)	
Iter: [5000][324/586]	TEST PSNR: ( 34.8453,  34.5217)	val_loss: ( 0.0182,  0.0138)	
Iter: [5000][325/586]	TEST PSNR: ( 34.3978,  34.5214)	val_loss: ( 0.0146,  0.0138)	
Iter: [5000][326/586]	TEST PSNR: ( 35.8634,  34.5255)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][327/586]	TEST PSNR: ( 32.5406,  34.5194)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][328/586]	TEST PSNR: ( 33.1815,  34.5153)	val_loss: ( 0.0165,  0.0138)	
Iter: [5000][329/586]	TEST PSNR: ( 35.1123,  34.5172)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][330/586]	TEST PSNR: ( 34.2951,  34.5165)	val_loss: ( 0.0140,  0.0138)	
Iter: [5000][331/586]	TEST PSNR: ( 35.3842,  34.5191)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][332/586]	TEST PSNR: ( 34.0281,  34.5176)	val_loss: ( 0.0166,  0.0138)	
Iter: [5000][333/586]	TEST PSNR: ( 33.7778,  34.5154)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][334/586]	TEST PSNR: ( 33.9211,  34.5136)	val_loss: ( 0.0125,  0.0138)	
Iter: [5000][335/586]	TEST PSNR: ( 34.8783,  34.5147)	val_loss: ( 0.0119,  0.0138)	
Iter: [5000][336/586]	TEST PSNR: ( 34.0063,  34.5132)	val_loss: ( 0.0125,  0.0138)	
Iter: [5000][337/586]	TEST PSNR: ( 34.5385,  34.5133)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][338/586]	TEST PSNR: ( 34.5662,  34.5134)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][339/586]	TEST PSNR: ( 32.2915,  34.5069)	val_loss: ( 0.0172,  0.0138)	
Iter: [5000][340/586]	TEST PSNR: ( 36.0231,  34.5113)	val_loss: ( 0.0106,  0.0138)	
Iter: [5000][341/586]	TEST PSNR: ( 32.7939,  34.5063)	val_loss: ( 0.0154,  0.0138)	
Iter: [5000][342/586]	TEST PSNR: ( 32.2606,  34.4998)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][343/586]	TEST PSNR: ( 33.3116,  34.4963)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][344/586]	TEST PSNR: ( 33.4329,  34.4932)	val_loss: ( 0.0178,  0.0138)	
Iter: [5000][345/586]	TEST PSNR: ( 35.9096,  34.4973)	val_loss: ( 0.0106,  0.0138)	
Iter: [5000][346/586]	TEST PSNR: ( 34.4494,  34.4972)	val_loss: ( 0.0136,  0.0138)	
Iter: [5000][347/586]	TEST PSNR: ( 36.2536,  34.5022)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][348/586]	TEST PSNR: ( 33.4109,  34.4991)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][349/586]	TEST PSNR: ( 33.3536,  34.4958)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][350/586]	TEST PSNR: ( 33.8373,  34.4940)	val_loss: ( 0.0153,  0.0138)	
Iter: [5000][351/586]	TEST PSNR: ( 36.7187,  34.5003)	val_loss: ( 0.0099,  0.0138)	
Iter: [5000][352/586]	TEST PSNR: ( 34.5049,  34.5003)	val_loss: ( 0.0147,  0.0138)	
Iter: [5000][353/586]	TEST PSNR: ( 34.2453,  34.4996)	val_loss: ( 0.0127,  0.0138)	
Iter: [5000][354/586]	TEST PSNR: ( 37.8766,  34.5091)	val_loss: ( 0.0088,  0.0138)	
Iter: [5000][355/586]	TEST PSNR: ( 37.7530,  34.5182)	val_loss: ( 0.0112,  0.0138)	
Iter: [5000][356/586]	TEST PSNR: ( 33.6009,  34.5156)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][357/586]	TEST PSNR: ( 33.8727,  34.5138)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][358/586]	TEST PSNR: ( 34.3442,  34.5134)	val_loss: ( 0.0127,  0.0138)	
Iter: [5000][359/586]	TEST PSNR: ( 33.7498,  34.5112)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][360/586]	TEST PSNR: ( 35.8201,  34.5149)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][361/586]	TEST PSNR: ( 33.9377,  34.5133)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][362/586]	TEST PSNR: ( 37.4074,  34.5213)	val_loss: ( 0.0092,  0.0138)	
Iter: [5000][363/586]	TEST PSNR: ( 35.4092,  34.5237)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][364/586]	TEST PSNR: ( 32.2178,  34.5174)	val_loss: ( 0.0199,  0.0138)	
Iter: [5000][365/586]	TEST PSNR: ( 34.5067,  34.5173)	val_loss: ( 0.0164,  0.0138)	
Iter: [5000][366/586]	TEST PSNR: ( 37.1401,  34.5245)	val_loss: ( 0.0102,  0.0138)	
Iter: [5000][367/586]	TEST PSNR: ( 32.6461,  34.5194)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][368/586]	TEST PSNR: ( 34.9771,  34.5206)	val_loss: ( 0.0125,  0.0138)	
Iter: [5000][369/586]	TEST PSNR: ( 35.4186,  34.5231)	val_loss: ( 0.0107,  0.0138)	
Iter: [5000][370/586]	TEST PSNR: ( 33.7882,  34.5211)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][371/586]	TEST PSNR: ( 35.9991,  34.5250)	val_loss: ( 0.0132,  0.0138)	
Iter: [5000][372/586]	TEST PSNR: ( 32.8491,  34.5206)	val_loss: ( 0.0181,  0.0138)	
Iter: [5000][373/586]	TEST PSNR: ( 32.8261,  34.5160)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][374/586]	TEST PSNR: ( 35.3132,  34.5181)	val_loss: ( 0.0111,  0.0138)	
Iter: [5000][375/586]	TEST PSNR: ( 34.7037,  34.5186)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][376/586]	TEST PSNR: ( 33.1694,  34.5151)	val_loss: ( 0.0184,  0.0138)	
Iter: [5000][377/586]	TEST PSNR: ( 35.8187,  34.5185)	val_loss: ( 0.0117,  0.0138)	
Iter: [5000][378/586]	TEST PSNR: ( 34.5031,  34.5185)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][379/586]	TEST PSNR: ( 33.5129,  34.5158)	val_loss: ( 0.0140,  0.0138)	
Iter: [5000][380/586]	TEST PSNR: ( 33.7164,  34.5137)	val_loss: ( 0.0153,  0.0138)	
Iter: [5000][381/586]	TEST PSNR: ( 36.2642,  34.5183)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][382/586]	TEST PSNR: ( 33.8740,  34.5166)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][383/586]	TEST PSNR: ( 33.2846,  34.5134)	val_loss: ( 0.0159,  0.0138)	
Iter: [5000][384/586]	TEST PSNR: ( 34.7178,  34.5139)	val_loss: ( 0.0121,  0.0138)	
Iter: [5000][385/586]	TEST PSNR: ( 35.1005,  34.5155)	val_loss: ( 0.0172,  0.0138)	
Iter: [5000][386/586]	TEST PSNR: ( 35.6403,  34.5184)	val_loss: ( 0.0120,  0.0138)	
Iter: [5000][387/586]	TEST PSNR: ( 37.1281,  34.5251)	val_loss: ( 0.0098,  0.0138)	
Iter: [5000][388/586]	TEST PSNR: ( 34.2289,  34.5243)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][389/586]	TEST PSNR: ( 35.4497,  34.5267)	val_loss: ( 0.0115,  0.0138)	
Iter: [5000][390/586]	TEST PSNR: ( 36.5853,  34.5320)	val_loss: ( 0.0118,  0.0138)	
Iter: [5000][391/586]	TEST PSNR: ( 35.6331,  34.5348)	val_loss: ( 0.0109,  0.0138)	
Iter: [5000][392/586]	TEST PSNR: ( 37.0391,  34.5412)	val_loss: ( 0.0104,  0.0138)	
Iter: [5000][393/586]	TEST PSNR: ( 34.2136,  34.5403)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][394/586]	TEST PSNR: ( 34.8361,  34.5411)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][395/586]	TEST PSNR: ( 33.4270,  34.5383)	val_loss: ( 0.0161,  0.0138)	
Iter: [5000][396/586]	TEST PSNR: ( 34.3572,  34.5378)	val_loss: ( 0.0161,  0.0138)	
Iter: [5000][397/586]	TEST PSNR: ( 36.2573,  34.5421)	val_loss: ( 0.0106,  0.0138)	
Iter: [5000][398/586]	TEST PSNR: ( 32.6572,  34.5374)	val_loss: ( 0.0164,  0.0138)	
Iter: [5000][399/586]	TEST PSNR: ( 33.5047,  34.5348)	val_loss: ( 0.0188,  0.0138)	
Iter: [5000][400/586]	TEST PSNR: ( 35.3797,  34.5369)	val_loss: ( 0.0152,  0.0138)	
Iter: [5000][401/586]	TEST PSNR: ( 33.3317,  34.5339)	val_loss: ( 0.0176,  0.0138)	
Iter: [5000][402/586]	TEST PSNR: ( 37.5094,  34.5413)	val_loss: ( 0.0090,  0.0138)	
Iter: [5000][403/586]	TEST PSNR: ( 35.0225,  34.5425)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][404/586]	TEST PSNR: ( 32.8251,  34.5383)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][405/586]	TEST PSNR: ( 37.3021,  34.5451)	val_loss: ( 0.0094,  0.0138)	
Iter: [5000][406/586]	TEST PSNR: ( 36.7833,  34.5506)	val_loss: ( 0.0092,  0.0138)	
Iter: [5000][407/586]	TEST PSNR: ( 33.9530,  34.5491)	val_loss: ( 0.0153,  0.0138)	
Iter: [5000][408/586]	TEST PSNR: ( 32.9502,  34.5452)	val_loss: ( 0.0160,  0.0138)	
Iter: [5000][409/586]	TEST PSNR: ( 32.7663,  34.5409)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][410/586]	TEST PSNR: ( 34.3218,  34.5403)	val_loss: ( 0.0154,  0.0138)	
Iter: [5000][411/586]	TEST PSNR: ( 33.4814,  34.5378)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][412/586]	TEST PSNR: ( 37.0055,  34.5437)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][413/586]	TEST PSNR: ( 30.6813,  34.5344)	val_loss: ( 0.0204,  0.0138)	
Iter: [5000][414/586]	TEST PSNR: ( 34.7737,  34.5350)	val_loss: ( 0.0128,  0.0138)	
Iter: [5000][415/586]	TEST PSNR: ( 35.8028,  34.5380)	val_loss: ( 0.0118,  0.0138)	
Iter: [5000][416/586]	TEST PSNR: ( 34.8790,  34.5388)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][417/586]	TEST PSNR: ( 32.4737,  34.5339)	val_loss: ( 0.0154,  0.0138)	
Iter: [5000][418/586]	TEST PSNR: ( 32.3000,  34.5286)	val_loss: ( 0.0167,  0.0138)	
Iter: [5000][419/586]	TEST PSNR: ( 34.7531,  34.5291)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][420/586]	TEST PSNR: ( 35.0009,  34.5302)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][421/586]	TEST PSNR: ( 34.5497,  34.5303)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][422/586]	TEST PSNR: ( 33.9683,  34.5289)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][423/586]	TEST PSNR: ( 35.9582,  34.5323)	val_loss: ( 0.0118,  0.0138)	
Iter: [5000][424/586]	TEST PSNR: ( 32.1811,  34.5268)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][425/586]	TEST PSNR: ( 33.7286,  34.5249)	val_loss: ( 0.0177,  0.0138)	
Iter: [5000][426/586]	TEST PSNR: ( 35.4241,  34.5270)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][427/586]	TEST PSNR: ( 35.9482,  34.5303)	val_loss: ( 0.0119,  0.0138)	
Iter: [5000][428/586]	TEST PSNR: ( 32.8534,  34.5264)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][429/586]	TEST PSNR: ( 35.4578,  34.5286)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][430/586]	TEST PSNR: ( 34.8403,  34.5293)	val_loss: ( 0.0143,  0.0138)	
Iter: [5000][431/586]	TEST PSNR: ( 37.9507,  34.5372)	val_loss: ( 0.0095,  0.0138)	
Iter: [5000][432/586]	TEST PSNR: ( 36.0461,  34.5407)	val_loss: ( 0.0115,  0.0138)	
Iter: [5000][433/586]	TEST PSNR: ( 33.3277,  34.5379)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][434/586]	TEST PSNR: ( 34.1221,  34.5370)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][435/586]	TEST PSNR: ( 33.2589,  34.5340)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][436/586]	TEST PSNR: ( 34.0507,  34.5329)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][437/586]	TEST PSNR: ( 34.6804,  34.5333)	val_loss: ( 0.0115,  0.0138)	
Iter: [5000][438/586]	TEST PSNR: ( 35.7203,  34.5360)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][439/586]	TEST PSNR: ( 34.9349,  34.5369)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][440/586]	TEST PSNR: ( 34.1361,  34.5360)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][441/586]	TEST PSNR: ( 36.1636,  34.5397)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][442/586]	TEST PSNR: ( 35.5965,  34.5420)	val_loss: ( 0.0121,  0.0138)	
Iter: [5000][443/586]	TEST PSNR: ( 36.0037,  34.5453)	val_loss: ( 0.0125,  0.0138)	
Iter: [5000][444/586]	TEST PSNR: ( 33.8250,  34.5437)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][445/586]	TEST PSNR: ( 34.0535,  34.5426)	val_loss: ( 0.0142,  0.0138)	
Iter: [5000][446/586]	TEST PSNR: ( 34.1061,  34.5416)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][447/586]	TEST PSNR: ( 33.3739,  34.5390)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][448/586]	TEST PSNR: ( 34.0846,  34.5380)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][449/586]	TEST PSNR: ( 32.4306,  34.5333)	val_loss: ( 0.0196,  0.0138)	
Iter: [5000][450/586]	TEST PSNR: ( 35.9461,  34.5365)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][451/586]	TEST PSNR: ( 36.1566,  34.5401)	val_loss: ( 0.0107,  0.0138)	
Iter: [5000][452/586]	TEST PSNR: ( 33.4905,  34.5377)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][453/586]	TEST PSNR: ( 33.5494,  34.5356)	val_loss: ( 0.0181,  0.0138)	
Iter: [5000][454/586]	TEST PSNR: ( 34.0393,  34.5345)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][455/586]	TEST PSNR: ( 33.4771,  34.5321)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][456/586]	TEST PSNR: ( 33.6973,  34.5303)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][457/586]	TEST PSNR: ( 33.9714,  34.5291)	val_loss: ( 0.0148,  0.0138)	
Iter: [5000][458/586]	TEST PSNR: ( 35.7299,  34.5317)	val_loss: ( 0.0128,  0.0138)	
Iter: [5000][459/586]	TEST PSNR: ( 32.1256,  34.5265)	val_loss: ( 0.0209,  0.0138)	
Iter: [5000][460/586]	TEST PSNR: ( 35.3206,  34.5282)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][461/586]	TEST PSNR: ( 35.0710,  34.5294)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][462/586]	TEST PSNR: ( 30.5709,  34.5208)	val_loss: ( 0.0192,  0.0138)	
Iter: [5000][463/586]	TEST PSNR: ( 33.1199,  34.5178)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][464/586]	TEST PSNR: ( 35.7789,  34.5205)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][465/586]	TEST PSNR: ( 38.8810,  34.5299)	val_loss: ( 0.0091,  0.0138)	
Iter: [5000][466/586]	TEST PSNR: ( 32.4464,  34.5254)	val_loss: ( 0.0167,  0.0138)	
Iter: [5000][467/586]	TEST PSNR: ( 37.9407,  34.5327)	val_loss: ( 0.0110,  0.0138)	
Iter: [5000][468/586]	TEST PSNR: ( 32.0981,  34.5275)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][469/586]	TEST PSNR: ( 33.2275,  34.5248)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][470/586]	TEST PSNR: ( 35.8002,  34.5275)	val_loss: ( 0.0115,  0.0138)	
Iter: [5000][471/586]	TEST PSNR: ( 33.5632,  34.5254)	val_loss: ( 0.0171,  0.0138)	
Iter: [5000][472/586]	TEST PSNR: ( 33.7048,  34.5237)	val_loss: ( 0.0181,  0.0138)	
Iter: [5000][473/586]	TEST PSNR: ( 33.1665,  34.5208)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][474/586]	TEST PSNR: ( 33.1256,  34.5179)	val_loss: ( 0.0155,  0.0138)	
Iter: [5000][475/586]	TEST PSNR: ( 34.4419,  34.5177)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][476/586]	TEST PSNR: ( 38.9764,  34.5271)	val_loss: ( 0.0077,  0.0138)	
Iter: [5000][477/586]	TEST PSNR: ( 32.5242,  34.5229)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][478/586]	TEST PSNR: ( 32.3957,  34.5184)	val_loss: ( 0.0171,  0.0138)	
Iter: [5000][479/586]	TEST PSNR: ( 35.3148,  34.5201)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][480/586]	TEST PSNR: ( 33.8105,  34.5186)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][481/586]	TEST PSNR: ( 33.6208,  34.5168)	val_loss: ( 0.0142,  0.0138)	
Iter: [5000][482/586]	TEST PSNR: ( 36.2221,  34.5203)	val_loss: ( 0.0094,  0.0138)	
Iter: [5000][483/586]	TEST PSNR: ( 32.0142,  34.5151)	val_loss: ( 0.0197,  0.0138)	
Iter: [5000][484/586]	TEST PSNR: ( 36.7206,  34.5197)	val_loss: ( 0.0107,  0.0138)	
Iter: [5000][485/586]	TEST PSNR: ( 34.0003,  34.5186)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][486/586]	TEST PSNR: ( 32.8503,  34.5152)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][487/586]	TEST PSNR: ( 32.6903,  34.5114)	val_loss: ( 0.0146,  0.0138)	
Iter: [5000][488/586]	TEST PSNR: ( 33.7357,  34.5098)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][489/586]	TEST PSNR: ( 37.1418,  34.5152)	val_loss: ( 0.0107,  0.0138)	
Iter: [5000][490/586]	TEST PSNR: ( 36.8248,  34.5199)	val_loss: ( 0.0109,  0.0138)	
Iter: [5000][491/586]	TEST PSNR: ( 34.3098,  34.5195)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][492/586]	TEST PSNR: ( 30.1909,  34.5107)	val_loss: ( 0.0236,  0.0138)	
Iter: [5000][493/586]	TEST PSNR: ( 33.8792,  34.5094)	val_loss: ( 0.0152,  0.0138)	
Iter: [5000][494/586]	TEST PSNR: ( 35.3246,  34.5111)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][495/586]	TEST PSNR: ( 32.2266,  34.5065)	val_loss: ( 0.0217,  0.0138)	
Iter: [5000][496/586]	TEST PSNR: ( 34.2212,  34.5059)	val_loss: ( 0.0130,  0.0138)	
Iter: [5000][497/586]	TEST PSNR: ( 34.1803,  34.5053)	val_loss: ( 0.0151,  0.0138)	
Iter: [5000][498/586]	TEST PSNR: ( 35.7119,  34.5077)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][499/586]	TEST PSNR: ( 36.4325,  34.5115)	val_loss: ( 0.0126,  0.0138)	
Iter: [5000][500/586]	TEST PSNR: ( 33.7513,  34.5100)	val_loss: ( 0.0147,  0.0138)	
Iter: [5000][501/586]	TEST PSNR: ( 33.7899,  34.5086)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][502/586]	TEST PSNR: ( 31.7692,  34.5031)	val_loss: ( 0.0224,  0.0138)	
Iter: [5000][503/586]	TEST PSNR: ( 32.5228,  34.4992)	val_loss: ( 0.0170,  0.0138)	
Iter: [5000][504/586]	TEST PSNR: ( 32.4268,  34.4951)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][505/586]	TEST PSNR: ( 35.4669,  34.4970)	val_loss: ( 0.0110,  0.0138)	
Iter: [5000][506/586]	TEST PSNR: ( 33.9987,  34.4960)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][507/586]	TEST PSNR: ( 37.2202,  34.5014)	val_loss: ( 0.0099,  0.0138)	
Iter: [5000][508/586]	TEST PSNR: ( 36.4204,  34.5052)	val_loss: ( 0.0098,  0.0138)	
Iter: [5000][509/586]	TEST PSNR: ( 35.2366,  34.5066)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][510/586]	TEST PSNR: ( 33.5852,  34.5048)	val_loss: ( 0.0123,  0.0138)	
Iter: [5000][511/586]	TEST PSNR: ( 34.2790,  34.5043)	val_loss: ( 0.0120,  0.0138)	
Iter: [5000][512/586]	TEST PSNR: ( 30.7747,  34.4971)	val_loss: ( 0.0170,  0.0138)	
Iter: [5000][513/586]	TEST PSNR: ( 34.4176,  34.4969)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][514/586]	TEST PSNR: ( 34.9146,  34.4977)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][515/586]	TEST PSNR: ( 34.8101,  34.4983)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][516/586]	TEST PSNR: ( 37.3213,  34.5038)	val_loss: ( 0.0101,  0.0138)	
Iter: [5000][517/586]	TEST PSNR: ( 31.7259,  34.4984)	val_loss: ( 0.0169,  0.0138)	
Iter: [5000][518/586]	TEST PSNR: ( 34.1157,  34.4977)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][519/586]	TEST PSNR: ( 34.9754,  34.4986)	val_loss: ( 0.0127,  0.0138)	
Iter: [5000][520/586]	TEST PSNR: ( 36.7833,  34.5030)	val_loss: ( 0.0099,  0.0138)	
Iter: [5000][521/586]	TEST PSNR: ( 33.2674,  34.5006)	val_loss: ( 0.0162,  0.0138)	
Iter: [5000][522/586]	TEST PSNR: ( 33.7422,  34.4992)	val_loss: ( 0.0181,  0.0138)	
Iter: [5000][523/586]	TEST PSNR: ( 33.4080,  34.4971)	val_loss: ( 0.0140,  0.0138)	
Iter: [5000][524/586]	TEST PSNR: ( 32.0092,  34.4924)	val_loss: ( 0.0166,  0.0138)	
Iter: [5000][525/586]	TEST PSNR: ( 30.2810,  34.4844)	val_loss: ( 0.0213,  0.0138)	
Iter: [5000][526/586]	TEST PSNR: ( 36.9292,  34.4890)	val_loss: ( 0.0094,  0.0138)	
Iter: [5000][527/586]	TEST PSNR: ( 34.3308,  34.4887)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][528/586]	TEST PSNR: ( 34.0560,  34.4879)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][529/586]	TEST PSNR: ( 35.3160,  34.4894)	val_loss: ( 0.0104,  0.0138)	
Iter: [5000][530/586]	TEST PSNR: ( 32.4138,  34.4855)	val_loss: ( 0.0159,  0.0138)	
Iter: [5000][531/586]	TEST PSNR: ( 34.6770,  34.4859)	val_loss: ( 0.0120,  0.0138)	
Iter: [5000][532/586]	TEST PSNR: ( 34.3345,  34.4856)	val_loss: ( 0.0144,  0.0138)	
Iter: [5000][533/586]	TEST PSNR: ( 32.3152,  34.4815)	val_loss: ( 0.0149,  0.0138)	
Iter: [5000][534/586]	TEST PSNR: ( 33.9017,  34.4805)	val_loss: ( 0.0164,  0.0138)	
Iter: [5000][535/586]	TEST PSNR: ( 33.5071,  34.4786)	val_loss: ( 0.0146,  0.0138)	
Iter: [5000][536/586]	TEST PSNR: ( 35.0709,  34.4797)	val_loss: ( 0.0121,  0.0138)	
Iter: [5000][537/586]	TEST PSNR: ( 33.8774,  34.4786)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][538/586]	TEST PSNR: ( 31.6710,  34.4734)	val_loss: ( 0.0163,  0.0138)	
Iter: [5000][539/586]	TEST PSNR: ( 35.1232,  34.4746)	val_loss: ( 0.0131,  0.0138)	
Iter: [5000][540/586]	TEST PSNR: ( 32.6922,  34.4713)	val_loss: ( 0.0165,  0.0138)	
Iter: [5000][541/586]	TEST PSNR: ( 36.6551,  34.4754)	val_loss: ( 0.0109,  0.0138)	
Iter: [5000][542/586]	TEST PSNR: ( 33.0414,  34.4727)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][543/586]	TEST PSNR: ( 34.9408,  34.4736)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][544/586]	TEST PSNR: ( 35.1429,  34.4748)	val_loss: ( 0.0117,  0.0138)	
Iter: [5000][545/586]	TEST PSNR: ( 36.9862,  34.4794)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][546/586]	TEST PSNR: ( 33.0011,  34.4767)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][547/586]	TEST PSNR: ( 33.1059,  34.4742)	val_loss: ( 0.0152,  0.0138)	
Iter: [5000][548/586]	TEST PSNR: ( 30.7593,  34.4674)	val_loss: ( 0.0181,  0.0138)	
Iter: [5000][549/586]	TEST PSNR: ( 35.5072,  34.4693)	val_loss: ( 0.0107,  0.0138)	
Iter: [5000][550/586]	TEST PSNR: ( 35.4331,  34.4711)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][551/586]	TEST PSNR: ( 36.4537,  34.4747)	val_loss: ( 0.0119,  0.0138)	
Iter: [5000][552/586]	TEST PSNR: ( 33.8219,  34.4735)	val_loss: ( 0.0134,  0.0138)	
Iter: [5000][553/586]	TEST PSNR: ( 33.1671,  34.4711)	val_loss: ( 0.0150,  0.0138)	
Iter: [5000][554/586]	TEST PSNR: ( 34.4422,  34.4711)	val_loss: ( 0.0145,  0.0138)	
Iter: [5000][555/586]	TEST PSNR: ( 37.8975,  34.4772)	val_loss: ( 0.0086,  0.0138)	
Iter: [5000][556/586]	TEST PSNR: ( 38.4287,  34.4843)	val_loss: ( 0.0106,  0.0138)	
Iter: [5000][557/586]	TEST PSNR: ( 33.7780,  34.4831)	val_loss: ( 0.0154,  0.0138)	
Iter: [5000][558/586]	TEST PSNR: ( 33.5633,  34.4814)	val_loss: ( 0.0141,  0.0138)	
Iter: [5000][559/586]	TEST PSNR: ( 34.6497,  34.4817)	val_loss: ( 0.0139,  0.0138)	
Iter: [5000][560/586]	TEST PSNR: ( 33.7114,  34.4803)	val_loss: ( 0.0156,  0.0138)	
Iter: [5000][561/586]	TEST PSNR: ( 37.0071,  34.4848)	val_loss: ( 0.0122,  0.0138)	
Iter: [5000][562/586]	TEST PSNR: ( 36.2533,  34.4880)	val_loss: ( 0.0108,  0.0138)	
Iter: [5000][563/586]	TEST PSNR: ( 33.6787,  34.4866)	val_loss: ( 0.0148,  0.0138)	
Iter: [5000][564/586]	TEST PSNR: ( 31.1417,  34.4806)	val_loss: ( 0.0214,  0.0138)	
Iter: [5000][565/586]	TEST PSNR: ( 34.9498,  34.4815)	val_loss: ( 0.0129,  0.0138)	
Iter: [5000][566/586]	TEST PSNR: ( 32.3675,  34.4777)	val_loss: ( 0.0184,  0.0138)	
Iter: [5000][567/586]	TEST PSNR: ( 36.9644,  34.4821)	val_loss: ( 0.0088,  0.0138)	
Iter: [5000][568/586]	TEST PSNR: ( 35.8354,  34.4845)	val_loss: ( 0.0110,  0.0138)	
Iter: [5000][569/586]	TEST PSNR: ( 36.0122,  34.4872)	val_loss: ( 0.0135,  0.0138)	
Iter: [5000][570/586]	TEST PSNR: ( 34.5557,  34.4873)	val_loss: ( 0.0133,  0.0138)	
Iter: [5000][571/586]	TEST PSNR: ( 34.0942,  34.4866)	val_loss: ( 0.0137,  0.0138)	
Iter: [5000][572/586]	TEST PSNR: ( 33.4021,  34.4847)	val_loss: ( 0.0146,  0.0138)	
Iter: [5000][573/586]	TEST PSNR: ( 34.9796,  34.4856)	val_loss: ( 0.0118,  0.0138)	
Iter: [5000][574/586]	TEST PSNR: ( 31.8192,  34.4809)	val_loss: ( 0.0158,  0.0138)	
Iter: [5000][575/586]	TEST PSNR: ( 34.1865,  34.4804)	val_loss: ( 0.0124,  0.0138)	
Iter: [5000][576/586]	TEST PSNR: ( 34.5052,  34.4805)	val_loss: ( 0.0159,  0.0138)	
Iter: [5000][577/586]	TEST PSNR: ( 35.1433,  34.4816)	val_loss: ( 0.0116,  0.0138)	
Iter: [5000][578/586]	TEST PSNR: ( 36.4582,  34.4850)	val_loss: ( 0.0114,  0.0138)	
Iter: [5000][579/586]	TEST PSNR: ( 32.7436,  34.4820)	val_loss: ( 0.0168,  0.0138)	
Iter: [5000][580/586]	TEST PSNR: ( 33.3816,  34.4801)	val_loss: ( 0.0153,  0.0138)	
Iter: [5000][581/586]	TEST PSNR: ( 33.4297,  34.4783)	val_loss: ( 0.0154,  0.0138)	
Iter: [5000][582/586]	TEST PSNR: ( 33.4085,  34.4765)	val_loss: ( 0.0165,  0.0138)	
Iter: [5000][583/586]	TEST PSNR: ( 36.9008,  34.4806)	val_loss: ( 0.0097,  0.0138)	
Iter: [5000][584/586]	TEST PSNR: ( 32.9238,  34.4780)	val_loss: ( 0.0138,  0.0138)	
Iter: [5000][585/586]	TEST PSNR: ( 34.3919,  34.4779)	val_loss: ( 0.0124,  0.0138)	
Epoch: [3][315/2342]	Iter:5000	Loss:0.0141 (avg:0.0185)	
Epoch: [3][415/2342]	Iter:5100	Loss:0.0143 (avg:0.0184)	
Epoch: [3][515/2342]	Iter:5200	Loss:0.0119 (avg:0.0183)	
Epoch: [3][615/2342]	Iter:5300	Loss:0.0148 (avg:0.0183)	
Epoch: [3][715/2342]	Iter:5400	Loss:0.0087 (avg:0.0182)	
Epoch: [3][815/2342]	Iter:5500	Loss:0.0116 (avg:0.0181)	
Epoch: [3][915/2342]	Iter:5600	Loss:0.0103 (avg:0.0180)	
Epoch: [3][1015/2342]	Iter:5700	Loss:0.0126 (avg:0.0180)	
Epoch: [3][1115/2342]	Iter:5800	Loss:0.0102 (avg:0.0179)	
Epoch: [3][1215/2342]	Iter:5900	Loss:0.0140 (avg:0.0178)	
Epoch: [3][1315/2342]	Iter:6000	Loss:0.0109 (avg:0.0177)	
Epoch: [3][1415/2342]	Iter:6100	Loss:0.0117 (avg:0.0177)	
Epoch: [3][1515/2342]	Iter:6200	Loss:0.0181 (avg:0.0176)	
Epoch: [3][1615/2342]	Iter:6300	Loss:0.0143 (avg:0.0176)	
Epoch: [3][1715/2342]	Iter:6400	Loss:0.0164 (avg:0.0175)	
Epoch: [3][1815/2342]	Iter:6500	Loss:0.0224 (avg:0.0174)	
Epoch: [3][1915/2342]	Iter:6600	Loss:0.0143 (avg:0.0174)	
